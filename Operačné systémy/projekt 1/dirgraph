#!/bin/sh
POSIXLY_CORRECT=yes

N=0

declare -a FSH
FSH[0]=0
FSH[1]=0
FSH[2]=0
FSH[3]=0
FSH[4]=0
FSH[5]=0
FSH[6]=0
FSH[7]=0
FSH[8]=0

while getopts :i:n o; 
do	 case "$o" in
		i)	FILE_ERE=${OPTARG};;
		n)	N=1;;
		*)	echo "Report of directory was created!" >&2 
			exit 1;;
  	 esac
done
shift $((OPTIND - 1))
if [ -z "$1" ]; then
	DIR=$(pwd)
else 
	DIR=$1
fi

echo "Root directory: $DIR"
if [ "$FILE_ERE" ]; then
	if [ -d "${FILE_ERE}" ]; then
		find ${DIR} -type d | egrep "$FILE_ERE" v | wc -l | xargs echo "Directories:"
	fi
	if [ -f "${FILE_ERE}" ]; then
		find ${DIR} -type f | egrep "$FILE_ERE" -v | wc -l | xargs echo "All files:"
	fi
	
else

	find ${DIR} -type d | wc -l | xargs echo "Directories:"

	find ${DIR} -type f | wc -l | xargs echo "All files:"
fi

file=''
for file in `find $DIR -type f`; do
size=$(wc -c < "$file")
if [ "$size" -lt 100 ]; then
	FSH[0]=$((${FSH[0]}+1 ))
elif [ "$size" -lt 1024 ]; then
	FSH[1]=$((${FSH[1]}+1 ))
elif [ "$size" -lt 10240 ]; then
	FSH[2]=$((${FSH[2]}+1 ))
elif [ "$size" -lt 102400 ]; then
	FSH[3]=$((${FSH[3]}+1 ))
elif [ "$size" -lt 1048576 ]; then
	FSH[4]=$((${FSH[4]}+1))
elif [ "$size" -lt 10485760 ]; then
	FSH[5]=$((${FSH[5]}+1))
elif [ "$size" -lt 104857600 ]; then
	FSH[6]=$((${FSH[6]}+1))
elif [ "$size" -lt 1073741824 ]; then
	FSH[7]=$((${FSH[7]}+1))
elif [ "$size" -ge 1073741824 ]; then
	FSH[8]=$((${FSH[8]}+1))
fi

done

echo "File size histogram:"

if [ "$N" -eq 1 ]; then
	if [ -t 1 ]; then
		N=$(tput cols)
	else
		N=79
	fi
fi

function print_hashtag
{
	if [ "$1" -ne 0 ]; then
		eval printf '\#%.0s' {1.."$1"}
	fi
		printf '\n'
}

printf "  <100 B  : " ; print_hashtag "${FSH[0]}"
printf "  <1 KiB  : " ; print_hashtag "${FSH[1]}"
printf "  <10 KiB : " ; print_hashtag "${FSH[2]}"
printf "  <100 KiB: " ; print_hashtag "${FSH[3]}"
printf "  <1 MiB  : " ; print_hashtag "${FSH[4]}"
printf "  <10 MiB : " ; print_hashtag "${FSH[5]}"
printf "  <100 MiB: " ; print_hashtag "${FSH[6]}"
printf "  <1 GiB  : " ; print_hashtag "${FSH[7]}"
printf "  >=1 GiB : " ; print_hashtag "${FSH[8]}"

